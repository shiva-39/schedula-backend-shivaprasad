
@baseUrl = http://localhost:3000

### STEP 1: Register Doctor (NEW DEMO)
# @name registerDoctorDemo
POST {{baseUrl}}/api/auth/doctor/register
Content-Type: application/json

{
  "email": "dr.elastic4.fixed.overflow.2025@schedula.com",
  "password": "FixedOverflow2025!",
  "name": "Dr. Fixed Overflow Logic",
  "specialization": "Corrected Elastic Surgery",
  "yearsExperience": 18
}

###

### STEP 2: Register Patient (NEW DEMO)
# @name registerPatientDemo
POST {{baseUrl}}/api/auth/patient/register
Content-Type: application/json

{
  "email": "patient4.fixed.overflow.2025@schedula.com",
  "password": "FixedPatient2025!",
  "name": "Fixed Overflow Patient",
  "age": 32,
  "gender": "male",
  "phoneNumber": "+1555014888"
}

###

### STEP 3: Login Users (NEW DEMO)
# @name loginDoctorDemo
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "dr.elastic4.fixed.overflow.2025@schedula.com",
  "password": "FixedOverflow2025!"
}

###

# @name loginPatientDemo
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "patient4.fixed.overflow.2025@schedula.com",
  "password": "FixedPatient2025!"
}

###

@doctorToken = {{loginDoctorDemo.response.body.access_token}}
@patientToken = {{loginPatientDemo.response.body.access_token}}
@doctorId = {{loginDoctorDemo.response.body.entityId}}
@patientId = {{loginPatientDemo.response.body.entityId}}



### ===============================================
### ELASTIC SCHEDULE OVERFLOW - CORRECTED LOGIC DEMO (2025, FIXED USERS)
### ===============================================

### STEP 4: Create Elastic Schedule (NEW DEMO)
# @name createElasticScheduleDemo
POST {{baseUrl}}/api/doctors/{{doctorId}}/recurring-schedules
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "name": "Fixed Overflow Demo Schedule",
  "startTime": "10:00",
  "endTime": "12:00",
  "slotDuration": 30,
  "bufferTime": 5,
  "maxAppointments": 2,
  "daysOfWeek": [1,2,3,4,5],
  "weeksAhead": 1,
  "allowOverrides": true,
  "autoGenerate": true
}

###

### STEP 5: Book Appointments (NEW DEMO)
# @name bookAppointment1
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patientToken}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createElasticScheduleDemo.response.body.id}}",
  "date": "2025-08-06",
  "startTime": "10:00",
  "endTime": "10:30"
}

###
# @name bookAppointment2
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patientToken}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createElasticScheduleDemo.response.body.id}}",
  "date": "2025-08-06",
  "startTime": "10:35",
  "endTime": "11:05"
}

###
# @name bookAppointment3
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patientToken}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createElasticScheduleDemo.response.body.id}}",
  "date": "2025-08-06",
  "startTime": "11:10",
  "endTime": "11:40"
}

###

### STEP 6: Get Appointments List After Booking (NEW DEMO)
# @name getAllDoctorAppointments_AfterBooking
GET {{baseUrl}}/api/appointments/doctor/{{doctorId}}
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###

### STEP 7: Shrink Elastic Schedule (simulate overflow, NEW DEMO)
# @name shrinkElasticScheduleDemo
POST {{baseUrl}}/api/doctors/{{doctorId}}/elastic-schedule
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "date": "2025-08-06",
  "startTime": "10:00",
  "endTime": "11:05",
  "slotDuration": 30,
  "bufferTime": 5,
  "maxAppointments": 1,
  "adjustExisting": true
}

###
@elasticScheduleId = {{shrinkElasticScheduleDemo.response.body.id}}

### STEP 8: Overflow Detection (after shrink, NEW DEMO)
# @name getElasticOverflow
GET {{baseUrl}}/api/appointments/elastic-schedule/{{elasticScheduleId}}/overflow
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###

### STEP 9: Overflow with Priority (FIFO, bucket, search priority, NEW DEMO)
# @name getElasticOverflowWithPriority
GET {{baseUrl}}/api/appointments/elastic-schedule/{{elasticScheduleId}}/overflow-with-priority
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###

### STEP 10: Redistribute Overflow Appointments (auto-reschedule, notification payloads, NEW DEMO)
# @name redistributeOverflowAppointments
POST {{baseUrl}}/api/appointments/elastic-schedule/{{elasticScheduleId}}/redistribute-overflow
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "date": "2025-08-06"
}

###

### STEP 11: Get Appointments List After Reschedule (NEW DEMO)
# @name getAllDoctorAppointments_AfterReschedule
GET {{baseUrl}}/api/appointments/doctor/{{doctorId}}
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###

### STEP 12: Check Available Slots (search next sessions, NEW DEMO)
# @name getAvailableSlots
GET {{baseUrl}}/api/doctors/{{doctorId}}/available-slots?date=2025-08-06
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###

### STEP 13: Check Notification Payloads (from redistribution, NEW DEMO)
# @name getRedistributionNotifications
GET {{baseUrl}}/api/appointments/elastic-schedule/{{elasticScheduleId}}/overflow-with-priority
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###


