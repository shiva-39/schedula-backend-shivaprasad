@baseUrl = http://localhost:3000

### STEP 1: Register Doctor (REDISTRIBUTION FIX DEMO)
# @name registerDoctorDemo
POST {{baseUrl}}/api/auth/doctor/register
Content-Type: application/json

{
  "email": "dr.elastic7.redistribution.fixed.2025@schedula.com",
  "password": "RedistFixed2025!",
  "name": "Dr. Redistribution Fixed",
  "specialization": "No Conflict Surgery",
  "yearsExperience": 22
}

###

### STEP 2: Register Patient (REDISTRIBUTION FIX DEMO)
# @name registerPatientDemo
POST {{baseUrl}}/api/auth/patient/register
Content-Type: application/json

{
  "email": "patient7.redistribution.fixed.2025@schedula.com",
  "password": "RedistFixedPatient2025!",
  "name": "Redistribution Fixed Patient",
  "age": 38,
  "gender": "non-binary",
  "phoneNumber": "+1555016666"
}

###

### STEP 3: Login Users (REDISTRIBUTION FIX DEMO)
# @name loginDoctorDemo
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "dr.elastic7.redistribution.fixed.2025@schedula.com",
  "password": "RedistFixed2025!"
}

###

# @name loginPatientDemo
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "patient7.redistribution.fixed.2025@schedula.com",
  "password": "RedistFixedPatient2025!"
}

###

@doctorToken = {{loginDoctorDemo.response.body.access_token}}
@patientToken = {{loginPatientDemo.response.body.access_token}}
@doctorId = {{loginDoctorDemo.response.body.entityId}}
@patientId = {{loginPatientDemo.response.body.entityId}}

### ===============================================
### COMPLETELY FIXED ELASTIC SCHEDULE OVERFLOW + REDISTRIBUTION (2025)
### This demo should now show the correct behavior:
### - Appointment 1 (10:00-10:30) SHOULD REMAIN SCHEDULED (fits time + capacity)
### - Appointment 2 (10:35-11:05) SHOULD BE OVERFLOW → redistributed to DIFFERENT slot  
### - Appointment 3 (11:10-11:40) SHOULD BE OVERFLOW → redistributed to DIFFERENT slot
### CRITICAL FIX: No more slot conflicts during redistribution!
### ===============================================

### STEP 4: Create Elastic Schedule (REDISTRIBUTION FIX DEMO)
# @name createElasticScheduleDemo
POST {{baseUrl}}/api/doctors/{{doctorId}}/recurring-schedules
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "name": "Redistribution Fixed Demo",
  "startTime": "10:00",
  "endTime": "12:00",
  "slotDuration": 30,
  "bufferTime": 5,
  "maxAppointments": 2,
  "daysOfWeek": [1,2,3,4,5],
  "weeksAhead": 1,
  "allowOverrides": true,
  "autoGenerate": true
}

###

### STEP 5: Book 3 Appointments (REDISTRIBUTION FIX DEMO)
# @name bookAppointment1
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patientToken}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createElasticScheduleDemo.response.body.id}}",
  "date": "2025-08-06",
  "startTime": "10:00",
  "endTime": "10:30"
}

###
# @name bookAppointment2
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patientToken}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createElasticScheduleDemo.response.body.id}}",
  "date": "2025-08-06",
  "startTime": "10:35",
  "endTime": "11:05"
}

###
# @name bookAppointment3
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patientToken}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createElasticScheduleDemo.response.body.id}}",
  "date": "2025-08-06",
  "startTime": "11:10",
  "endTime": "11:40"
}

###

### STEP 6: Verify All 3 Appointments Booked (REDISTRIBUTION FIX DEMO)
# @name getAllDoctorAppointments_AfterBooking
GET {{baseUrl}}/api/appointments/doctor/{{doctorId}}
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###

### STEP 7: Shrink Schedule (10:00-11:05, maxAppointments=1) (REDISTRIBUTION FIX DEMO)
### This should preserve appointment 1 and mark appointments 2 & 3 as overflow
# @name shrinkElasticScheduleDemo
POST {{baseUrl}}/api/doctors/{{doctorId}}/elastic-schedule
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "date": "2025-08-06",
  "startTime": "10:00",
  "endTime": "11:05",
  "slotDuration": 30,
  "bufferTime": 5,
  "maxAppointments": 1,
  "adjustExisting": true
}

###
@elasticScheduleId = {{shrinkElasticScheduleDemo.response.body.id}}

### STEP 8: Check Appointments After Shrink (REDISTRIBUTION FIX DEMO)
### Should show: 1 scheduled + 2 cancelled
# @name getAllDoctorAppointments_AfterShrink
GET {{baseUrl}}/api/appointments/doctor/{{doctorId}}
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###

### STEP 9: Overflow Detection (REDISTRIBUTION FIX DEMO)
### Should show only 2 appointments as overflow (appointments 2 & 3)
# @name getElasticOverflow
GET {{baseUrl}}/api/appointments/elastic-schedule/{{elasticScheduleId}}/overflow
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###

### STEP 10: Overflow with Priority (REDISTRIBUTION FIX DEMO)
### Should show 2 appointments with proper overflow reasons
# @name getElasticOverflowWithPriority
GET {{baseUrl}}/api/appointments/elastic-schedule/{{elasticScheduleId}}/overflow-with-priority
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###

### STEP 11: Redistribute Overflow (REDISTRIBUTION FIX DEMO)
### CRITICAL: Should redistribute appointments 2&3 to DIFFERENT slots (no conflicts!)
# @name redistributeOverflowAppointments
POST {{baseUrl}}/api/appointments/elastic-schedule/{{elasticScheduleId}}/redistribute-overflow
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "date": "2025-08-06"
}

###

### STEP 12: Final Verification (REDISTRIBUTION FIX DEMO)
### Should show:
### - Appointment 1: still on 2025-08-06 10:00-10:30
### - Appointment 2: moved to 2025-08-07 10:00-10:30
### - Appointment 3: moved to 2025-08-07 10:35-11:05 (DIFFERENT slot!)
# @name getAllDoctorAppointments_Final
GET {{baseUrl}}/api/appointments/doctor/{{doctorId}}
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

###
