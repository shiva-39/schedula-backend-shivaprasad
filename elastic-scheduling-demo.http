### ===============================================
### üé¨ ELASTIC SCHEDULING DEMO - V9 FINAL
### ===============================================

@baseUrl = http://localhost:3000

@doctorToken = {{loginDoctor.response.body.access_token}}
@patient1Token = {{loginPatient1.response.body.access_token}}
@patient2Token = {{loginPatient2.response.body.access_token}}
@patient3Token = {{loginPatient3.response.body.access_token}}
@patient4Token = {{loginPatient4.response.body.access_token}}
@patient5Token = {{loginPatient5.response.body.access_token}}
@doctorId = {{loginDoctor.response.body.entityId}}
@patient1Id = {{loginPatient1.response.body.entityId}}
@patient2Id = {{loginPatient2.response.body.entityId}}
@patient3Id = {{loginPatient3.response.body.entityId}}
@patient4Id = {{loginPatient4.response.body.entityId}}
@patient5Id = {{loginPatient5.response.body.entityId}}

### ===============================================
### üöÄ STEP 1: REGISTER DOCTOR
### ===============================================

# @name registerDoctor
POST {{baseUrl}}/api/auth/doctor/register
Content-Type: application/json

{
  "email": "dr.validation.jul31.v9@schedula.com",
  "password": "ValidationDemo2025!",
  "name": "Dr. Michael TestRun",
  "specialization": "Emergency Medicine",
  "yearsExperience": 15
}

### ===============================================
### üöÄ STEP 2: REGISTER PATIENT 1
### ===============================================

# @name registerPatient1
POST {{baseUrl}}/api/auth/patient/register
Content-Type: application/json

{
  "email": "patient1.validation.jul31.v9@schedula.com",
  "password": "Patient2025!",
  "name": "Alex Rivera",
  "age": 32,
  "gender": "male",
  "phoneNumber": "+1555004001"
}

### ===============================================
### üöÄ STEP 3: REGISTER PATIENT 2
### ===============================================

# @name registerPatient2
POST {{baseUrl}}/api/auth/patient/register
Content-Type: application/json

{
  "email": "patient2.validation.jul31.v9@schedula.com",
  "password": "Patient2025!",
  "name": "Sofia Chen",
  "age": 28,
  "gender": "female",
  "phoneNumber": "+1555004002"
}

### ===============================================
### üöÄ STEP 4: REGISTER PATIENT 3
### ===============================================

# @name registerPatient3
POST {{baseUrl}}/api/auth/patient/register
Content-Type: application/json

{
  "email": "patient3.validation.jul31.v9@schedula.com",
  "password": "Patient2025!",
  "name": "Jordan Taylor",
  "age": 35,
  "gender": "male",
  "phoneNumber": "+1555004003"
}

### ===============================================
### üöÄ STEP 5: REGISTER PATIENT 4
### ===============================================

# @name registerPatient4
POST {{baseUrl}}/api/auth/patient/register
Content-Type: application/json

{
  "email": "patient4.validation.jul31.v9@schedula.com",
  "password": "Patient2025!",
  "name": "Zoe Williams",
  "age": 24,
  "gender": "female",
  "phoneNumber": "+1555004004"
}

### ===============================================
### üöÄ STEP 6: REGISTER PATIENT 5
### ===============================================

# @name registerPatient5
POST {{baseUrl}}/api/auth/patient/register
Content-Type: application/json

{
  "email": "patient5.validation.jul31.v9@schedula.com",
  "password": "Patient2025!",
  "name": "Ryan Kim",
  "age": 30,
  "gender": "male",
  "phoneNumber": "+1555004005"
}

### ===============================================
### üîê STEP 7: LOGIN DOCTOR
### ===============================================

# @name loginDoctor
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "dr.validation.jul31.v9@schedula.com",
  "password": "ValidationDemo2025!"
}

### ===============================================
### üîê STEP 8: LOGIN PATIENT 1
### ===============================================

# @name loginPatient1
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "patient1.validation.jul31.v9@schedula.com",
  "password": "Patient2025!"
}

### ===============================================
### üîê STEP 9: LOGIN PATIENT 2
### ===============================================

# @name loginPatient2
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "patient2.validation.jul31.v9@schedula.com",
  "password": "Patient2025!"
}

### ===============================================
### üîê STEP 10: LOGIN PATIENT 3
### ===============================================

# @name loginPatient3
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "patient3.validation.jul31.v9@schedula.com",
  "password": "Patient2025!"
}

### ===============================================
### üîê STEP 11: LOGIN PATIENT 4
### ===============================================

# @name loginPatient4
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "patient4.validation.jul31.v9@schedula.com",
  "password": "Patient2025!"
}

### ===============================================
### üîê STEP 12: LOGIN PATIENT 5
### ===============================================

# @name loginPatient5
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "patient5.validation.jul31.v9@schedula.com",
  "password": "Patient2025!"
}

### ===============================================
### ‚úÖ SETUP COMPLETE - READY FOR ELASTIC SCHEDULING
### ===============================================

# All users are now registered and logged in
# Available tokens: doctorToken, patient1Token-patient5Token
# Available IDs: doctorId, patient1Id-patient5Id
# Ready to proceed with elastic scheduling demonstrations!

###

# Quick verification - Check doctor profile
GET {{baseUrl}}/api/auth/profile
Authorization: Bearer {{doctorToken}}

###

# Quick verification - Check patient 1 profile
GET {{baseUrl}}/api/auth/profile
Authorization: Bearer {{patient1Token}}

### ===============================================
### üîÅ STEP 13: CREATE RECURRING SCHEDULE
### ===============================================

# @name createRecurringSchedule
POST {{baseUrl}}/api/doctors/{{doctorId}}/recurring-schedules
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "name": "V9 FINAL: Complete Validation System Demo",
  "startTime": "15:00",
  "endTime": "18:00",
  "slotDuration": 30,
  "bufferTime": 5,
  "maxAppointments": 5,
  "daysOfWeek": [1, 2, 3, 4, 5],
  "weeksAhead": 4,
  "allowOverrides": true,
  "autoGenerate": true
}

### ===============================================
### üìÖ STEP 14: VIEW AVAILABLE SLOTS
### ===============================================

GET {{baseUrl}}/api/doctors/{{doctorId}}/available-slots?date=2025-07-31
Authorization: Bearer {{patient1Token}}

### ===============================================
### üìù STEP 15: BOOK APPOINTMENTS
### ===============================================

# @name bookAppointment1
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient1Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-07-31",
  "startTime": "15:00",
  "endTime": "15:30"
}

###

# @name conflictBooking
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient2Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-07-31",
  "startTime": "15:00",
  "endTime": "15:30"
}

###
# @name bookAppointment2
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient2Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-07-31",
  "startTime": "15:35",
  "endTime": "16:05"
}

###

# @name bookAppointment3
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient3Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-07-31",
  "startTime": "16:10",
  "endTime": "16:40"
}

###

# @name bookAppointment4
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient4Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-07-31",
  "startTime": "16:45",
  "endTime": "17:15"
}

###

# @name bookAppointment5
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient5Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-07-31",
  "startTime": "17:20",
  "endTime": "17:50"
}

### ===============================================
### üîç STEP 16: VERIFY BOOKINGS
### ===============================================

GET {{baseUrl}}/api/doctors/{{doctorId}}/available-slots?date=2025-07-31
Authorization: Bearer {{patient1Token}}

###

GET {{baseUrl}}/api/appointments/doctor/{{doctorId}}
Authorization: Bearer {{doctorToken}}

### ===============================================
### üîÑ STEP 17: REDUCE SCHEDULE CAPACITY
### ===============================================

# @name createReducedSchedule
POST {{baseUrl}}/api/doctors/{{doctorId}}/elastic-schedule
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "date": "2025-07-31",
  "startTime": "16:00",
  "endTime": "17:30",
  "slotDuration": 30,
  "bufferTime": 5,
  "maxAppointments": 3,
  "adjustExisting": true
}

### ===============================================
### üîç STEP 18: VERIFY RESCHEDULING RESULTS
### ===============================================

GET {{baseUrl}}/api/doctors/{{doctorId}}/available-slots?date=2025-07-31
Authorization: Bearer {{patient1Token}}

###

GET {{baseUrl}}/api/appointments/doctor/{{doctorId}}
Authorization: Bearer {{doctorToken}}

### ===============================================
### üë• STEP 19: CHECK PATIENT STATUS
### ===============================================

GET {{baseUrl}}/api/appointments/patient/{{patient1Id}}
Authorization: Bearer {{patient1Token}}

###

GET {{baseUrl}}/api/appointments/patient/{{patient2Id}}
Authorization: Bearer {{patient2Token}}

###

GET {{baseUrl}}/api/appointments/patient/{{patient3Id}}
Authorization: Bearer {{patient3Token}}

###

GET {{baseUrl}}/api/appointments/patient/{{patient4Id}}
Authorization: Bearer {{patient4Token}}

###

GET {{baseUrl}}/api/appointments/patient/{{patient5Id}}
Authorization: Bearer {{patient5Token}}

### ===============================================
### ÔøΩ STEP 20: EDGE CASE TESTING
### ===============================================

# @name outsideScheduleBefore
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient1Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-07-31",
  "startTime": "14:00",
  "endTime": "14:30"
}

###

# @name outsideScheduleAfter
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient3Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-07-31",
  "startTime": "18:30",
  "endTime": "19:00"
}

###

# @name overlappingBooking
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient4Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-07-31",
  "startTime": "16:15",
  "endTime": "16:45"
}

###

# @name invalidTimeOrder
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient5Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-07-31",
  "startTime": "16:30",
  "endTime": "16:00"
}

###

# @name weekendBooking
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient1Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-08-02",
  "startTime": "15:00",
  "endTime": "15:30"
}

### ===============================================
### ‚úÖ STEP 21: VALID REBOOKING
### ===============================================

GET {{baseUrl}}/api/doctors/{{doctorId}}/available-slots?date=2025-08-01
Authorization: Bearer {{patient5Token}}

###

# @name manualRebooking
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patient5Token}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "recurringScheduleId": "{{createRecurringSchedule.response.body.id}}",
  "date": "2025-08-01",
  "startTime": "15:00",
  "endTime": "15:30"
}


