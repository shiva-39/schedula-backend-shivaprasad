### ===============================================
### üé¨ ELASTIC SCHEDULING DEMO - SIMPLIFIED LOOM FLOW
### Clean, focused demonstration - Perfect for video
### Date: July 28, 2025 - 9 Essential Steps Only
### ===============================================

@baseUrl = http://localhost:3000

# Auto-extracted variables from responses
@doctorToken = {{loginDoctor.response.body.access_token}}
@patientToken = {{loginPatient.response.body.access_token}}
@doctorId = {{loginDoctor.response.body.entityId}}
@patientId = {{loginPatient.response.body.entityId}}
@recurringScheduleId = {{createRecurringSchedule.response.body.id}}
@elasticOverrideId = {{createElasticOverride.response.body.id}}
@appointmentId = {{bookSlot.response.body.id}}

### ===============================================
### üöÄ STEP 1: REGISTER DOCTOR
### ===============================================

# @name registerDoctor
POST {{baseUrl}}/api/auth/doctor/register
Content-Type: application/json

{
  "email": "dr.elasticfresh.july28@newclinic2025.com",
  "password": "FreshElasticDoc2025!",
  "name": "Dr. Michael ElasticFresh",
  "specialization": "Cardiology",
  "yearsExperience": 10
}

### ===============================================
### üöÄ STEP 2: REGISTER PATIENT
### ===============================================

# @name registerPatient
POST {{baseUrl}}/api/auth/patient/register
Content-Type: application/json

{
  "email": "patient.elasticfresh.july28@freshmail2025.com",
  "password": "FreshPatient2025!",
  "name": "Taylor FreshBooking",
  "age": 29,
  "gender": "female",
  "phoneNumber": "+1555123456"
}

### ===============================================
### üîê STEP 3: LOGIN DOCTOR
### ===============================================

# @name loginDoctor
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "dr.elasticfresh.july28@newclinic2025.com",
  "password": "FreshElasticDoc2025!"
}

### ===============================================
### üîê STEP 4: LOGIN PATIENT
### ===============================================

# @name loginPatient
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "patient.elasticfresh.july28@freshmail2025.com",
  "password": "FreshPatient2025!"
}

### ===============================================
### üîÅ STEP 5: CREATE ELASTIC RECURRING SCHEDULE
### ===============================================

# @name createRecurringSchedule
POST {{baseUrl}}/api/doctors/{{doctorId}}/recurring-schedules
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "name": "DEMO: Fresh July 28 Elastic Clinic",
  "startTime": "09:00",
  "endTime": "17:00",
  "slotDuration": 30,
  "bufferTime": 5,
  "maxAppointments": 16,
  "daysOfWeek": [1, 2, 3, 4, 5],
  "weeksAhead": 4,
  "allowOverrides": true,
  "autoGenerate": true
}

### ===============================================
### üìÖ STEP 6: DISPLAY WEEK SLOTS (Auto-generated)
### ===============================================

GET {{baseUrl}}/api/doctors/{{doctorId}}/recurring-schedules/{{recurringScheduleId}}/schedules?days=7
Authorization: Bearer {{doctorToken}}

### ===============================================
### üéØ STEP 7: DISPLAY TODAY'S AVAILABLE SLOTS (Individual Time Slots)
### ===============================================

# Patient checks available divided time slots from the recurring schedule
# Step 1: Get today's schedule metadata from recurring schedule
GET {{baseUrl}}/api/doctors/{{doctorId}}/elastic-slots?date=2025-07-28
Authorization: Bearer {{patientToken}}

###

# Step 2: Get ALL available individual time slots (9:00-9:30, 9:35-10:05, etc.)
# NEW PROPER ENDPOINT - No temporary appointments needed!
GET {{baseUrl}}/api/doctors/{{doctorId}}/available-slots?date=2025-07-28
Authorization: Bearer {{patientToken}}

### ===============================================
### ÔøΩ STEP 8: DOCTOR CREATES ELASTIC OVERRIDE (SPECIFIC DAY MODIFICATION)
### ===============================================

# Doctor creates an elastic override for Monday to extend hours (14:00-20:00)
# This shows how to modify ONLY a specific day while keeping recurring schedule for other days
# @name createElasticOverride
POST {{baseUrl}}/api/doctors/{{doctorId}}/elastic-schedule
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "date": "2025-07-28",
  "startTime": "14:00",
  "endTime": "20:00",
  "slotDuration": 25,
  "bufferTime": 10,
  "maxAppointments": 20
}

### ===============================================
### ÔøΩ STEP 9: PATIENT BOOKS SPECIFIC TIME SLOT (ELASTIC SCHEDULE)
### ===============================================

# @name bookSlot
# Patient books a specific time slot using the NEW ELASTIC SCHEDULE
# This will link the appointment to the elastic schedule, not recurring schedule
POST {{baseUrl}}/api/appointments
Authorization: Bearer {{patientToken}}
Content-Type: application/json

{
  "doctorId": "{{doctorId}}",
  "elasticScheduleId": "{{elasticOverrideId}}",
  "startTime": "15:30",
  "endTime": "15:55"
}

###

# Verify the appointment was booked - should show exact start/end times AND elasticSchedule link
GET {{baseUrl}}/api/appointments/patient/{{patientId}}
Authorization: Bearer {{patientToken}}

### ===============================================
### üìä STEP 10: DISPLAY UPDATED SLOTS (ONLY FOR MONDAY 28th)
### ===============================================

# Show Monday (28th) - Should reflect the elastic override
# Show all patient appointments to see the bookings (should show elasticSchedule link)
GET {{baseUrl}}/api/appointments/patient/{{patientId}}
Authorization: Bearer {{patientToken}}

###

# Show doctor's appointments to see the elastic schedule effect
GET {{baseUrl}}/api/appointments/doctor/{{doctorId}}
Authorization: Bearer {{doctorToken}}

### ===============================================
### üìä STEP 10b: DISPLAY TUESDAY SLOTS (UNCHANGED FROM RECURRING)
### ===============================================

# Show Tuesday (29th) - Should still use original recurring schedule
# This shows just the recurring schedule metadata (30-min slots, 9:00-17:00)
GET {{baseUrl}}/api/doctors/{{doctorId}}/elastic-slots?date=2025-07-29
Authorization: Bearer {{doctorToken}}

### ===============================================
### üë§ STEP 11: DISPLAY PATIENT'S UPDATED APPOINTMENT
### ===============================================

GET {{baseUrl}}/api/appointments/patient/{{patientId}}
Authorization: Bearer {{patientToken}}

### ===============================================
### ‚ùå STEP 12: DOCTOR TRIES TO UPDATE TOO CLOSE TO START TIME (SHOULD FAIL)
### ===============================================

# Try to update the Monday elastic override too close to start time (Should raise error)
# Trying to modify schedule that starts at 14:00 when it's already past 12:00
PATCH {{baseUrl}}/api/doctors/{{doctorId}}/elastic-schedule/{{elasticOverrideId}}
Authorization: Bearer {{doctorToken}}
Content-Type: application/json

{
  "startTime": "13:00",
  "endTime": "21:00",
  "adjustExisting": false
}

### ===============================================
### üéä END OF SIMPLIFIED ELASTIC SCHEDULING DEMO
### üèÜ PERFECT 12-STEP FLOW FOR LOOM VIDEO
### ===============================================
### ‚úÖ Complete Flow Demonstrated:
### 1. Register Doctor ‚úÖ
### 2. Register Patient ‚úÖ
### 3. Login Doctor ‚úÖ
### 4. Login Patient ‚úÖ
### 5. Create Elastic Recurring Schedule ‚úÖ
### 6. Display Week Slots ‚úÖ
### 7. Display Today's Available Slots ‚úÖ
### 8. Doctor Creates Elastic Override (Specific Day Only) ‚úÖ
### 9. Patient Books Slot (ELASTIC SCHEDULE - shows elasticSchedule link) ‚úÖ
### 10. Display Updated Slots (Monday Modified, Tuesday Unchanged) ‚úÖ
### 11. Display Patient's Updated Appointment ‚úÖ
### 12. Doctor Update Fails (2-hour restriction) ‚ùå
### ===============================================
### üéØ KEY ELASTIC SCHEDULING CONCEPT DEMONSTRATED:
### - Recurring Schedule: Template that generates weekly patterns
### - Elastic Override: Doctor modifies ONLY specific day/week
### - Original recurring schedule continues for other days
### - Perfect demonstration of flexibility vs consistency
### ===============================================
